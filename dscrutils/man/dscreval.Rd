% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dscreval.R
\name{dscreval}
\alias{dscreval}
\title{Parse and evaluate R expression, and check that the value is
a "simple" atomic object, or a list of simple atomic objects.}
\usage{
dscreval(x)
}
\description{
Parse and evaluate R expression, and check that the value is
a "simple" atomic object, or a list of simple atomic objects.
}
\details{
TO DO: Give a few more details about what this function
  does. Explain what is meant by "simple atomic" object.

NOTE: Evaluates the expression in the base R environment.
}
\examples{

# Generates a string encoding a tuple of numeric values.
x1 <- dscreval("c(3,-1,14)")
cat(x1,"\\n")

# Generates a string encoding a tuple of numeric values.
x2 <- dscreval("seq(1,2,length.out = 5)")
cat(x2,"\\n")

# Generates a string encoding a tuple of logical values.
x3 <- dscreval("1:7 < 5")
cat(x3,"\\n")

# Generates a string encoding a tuple of character values.
x4 <- dscreval("c('Illinois','Michigan','Ohio')")
cat(x4,"\\n")

# Generates a string encoding of a nested tuple, in which the first
# element contains character values, and the second element contains
# numeric values.
x5 <- dscreval("list(x = LETTERS[1:5],y = 1:5)")
cat(x5,"\\n")

\dontrun{

# Produces an error because NULL is not allowed.
dscreval("NULL")

# Produces an error because complex numbers are not allowed.
dscreval("polyroot(c(-1,2,-1,4))")

# Produces an error because NULL values are not allowed anywhere in
# the data structure.
dscreval("vector('list',3)")

# Produces an error because lists containing lists are not allowed.
dscreval("list(x = LETTERS[1:5],y = 1:5,z = as.list(1:5))")
}

}

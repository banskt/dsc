scenario:
    exec: datamaker.R
    seed: R(1:50), R(1:5)
    params:
        path: R(gsub("[[:space:]]", "", readChar($(fileName), file.info($(fileName))$size)))
        tissue: Adipose-Subcutaneous, (Adipose-Subcutaneous, Lung)
        Nsamp: 2, 10, 50
        Ngene: 10000
        voom.normalize: TRUE
        breaksample: FALSE, TRUE
        nullpi: 0.9
        poisthin: TRUE
        .alias: args = RList()
        .logic: (seed[1] * path * tissue * Nsamp * Ngene * voom.normalize * breaksample),
                   (seed[2] * path * tissue[2] * Nsamp * Ngene * voom.normalize * breaksample[2] * nullpi),
                   (seed[2] * path * tissue[1] * Nsamp * Ngene * voom.normalize * breaksample[1] * poisthin)
    return: data, meta = R(data$meta)

method:
    exec: deseq2.wrapper.R, edger.wrapper.R, limma.wrapper.R, ash.wrapper.R, jointash.wrapper.R
    params:
        input: $data
        transform: voom, RUVvoom, SVAvoom, quasibinom, RUV+quasibinom, SVA+quasibinom, Myrna+quasibinom, edgeRglm
        .alias: RList(args, transform)
        exec[1]:
            .logic: NULL
        exec[2]:
            exacttest: TRUE, FALSE
            RUV: FALSE, FALSE, TRUE
            SVA: FALSE, TRUE, FALSE
            .alias: args = RList()
            .logic: exacttest[1], (exacttest[2] * (RUV + SVA))
        exec[3]:
            robust: FALSE, TRUE
            .alias: args = RList()
            .logic: (transform[1] * robust), (transform[2,3] * robust[1])
        exec[4]:
            .logic: transform[1:6]
        exec[5]:
            singlecomp: TRUE
            .alias: args = RList()
    return: output

score:
    exec: score.R
    params:
        data: $data
        work_dir: $output
    return: result

DSC:
    run: scenario * method * score
    R_libs: github/stephens999/ashr, bioc/DESeq2, bioc/qvalue/3.2, mixash, github/mengyin/vash, limma,
            edgeR, RUVSeq, sva, data.table, DESeq
    exec_path: bin
    work_dir: vash
    variables:
        fileName: data_path.txt

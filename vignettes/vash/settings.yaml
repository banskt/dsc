scenario:
    exe: datamaker.R
    seed: R(1:50), R(1:5)
    params:
        path: R(gsub("[[:space:]]", "", readChar($(fileName), file.info($(fileName))$size)))
        tissue: Adipose-Subcutaneous, eval(c("Adipose-Subcutaneous","Lung"))
        Nsamp: 2, 10, 50
        Ngene: 10000
        voom.normalize: TRUE
        breaksample: FALSE, TRUE
        nullpi: 0.9
        poisthin: TRUE
        __map__: RList(args)
        __logic__: Product(seed[1], path, tissue, Nsamp, Ngene, voom.normalize, breaksample),
                   Product(seed[2], path, tissue[2], Nsamp, Ngene, voom.normalize, breaksample[2], nullpi),
                   Product(seed[2], path, tissue[1], Nsamp, Ngene, voom.normalize, breaksample[1], poisthin)
    return: data

method:
    exe: deseq2.wrapper.R, edger.wrapper.R, limma.wrapper.R, ash.wrapper.R, jointash.wrapper.R
    params:
        input: $scenario.data
        transform: voom, RUVvoom, SVAvoom, quasibinom, RUV+quasibinom, SVA+quasibinom, Myrna+quasibinom, edgeRglm
        __map__: RList(args, transform)
        exe[1]:
            __logic__: NULL
        exe[2]:
            exacttest: TRUE, FALSE
            RUV: FALSE, FALSE, TRUE
            SVA: FALSE, TRUE, FALSE
            __map__: RList(args)
            __logic__: exacttest[1],
                       Product(exacttest[2], Pairwise(RUV, SVA))
        exe[3]:
            robust: FALSE, TRUE
            __map__: RList(args)
            __logic__: Product(transform[1], robust), Product(transform[2,3], robust[1])
        exe[4]:
            __logic__: transform[1:6]
        exe[5]:
            singlecomp: TRUE
            __map__: RList(args)
    return: output

score:
    exe: score.R
    params:
        data: $scenario
        output: $method
    return: result

runtime:
    R_libs: ashr, DESeq2, qvalue, mixash, vash, limma, edgeR, RUVSeq, sva, data.table, DESeq
    exe_path: bin
    output: vash
    variables:
        fileName: data_path.txt

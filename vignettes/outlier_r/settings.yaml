scenario:
    exe: Product(datamaker.R, $(data_functions))
    seed: R(1:2), R((1:3) * 100)
    return: data
    params:
        n.neutral.snps: 9500, 1900
        n.selected.snps: 0500, 100
        n.samples.per.dim: 30, 20, 10
        n.samples: 100
        geno: TRUE, FALSE
        y.scale: 1, 2, 5
        x.scale: 1
        sel.strength: 0, 1, 5, 10
        sel.scale: 0, 1, 5, 10, 20
        sel.angle: R(seq(0,pi/2,length.out=5))
        spread: 0.1, 0.2, 1
        sel.pos: 0, 0,25
        sel.var: 0.01
        __alias__: RList(args)
        exe[1]:
            __logic__: Product(seed[1], n.samples, n.neutral.snps[1], n.selected.snps[1], geno[1])
        exe[2]:
            __logic__: Product(seed[1], n.samples.per.dim[1], n.neutral.snps[1], n.selected.snps[1], geno)
        exe[3]:
            __logic__: Product(seed[2], n.neutral.snps[2], n.selected.snps[2],
                       n.samples.per.dim, x.scale, y.scale, sel.strength, sel.angle, spread, geno[1])
        exe[4]:
            __logic__: Product(seed[2], n.neutral.snps[2], n.selected.snps[2],
                       n.samples.per.dim, x.scale, y.scale, sel.scale, sel.pos, sel.var, spread, geno[1])

method:
    exe: Product(method.R, $(method_functions))
    return: data
    params:
        __alias__: RList(args)
        exe[3]:
            K: 2, 5
        exe[4]:
            K: 2, 5
        exe[5]:
            K: 2, 3
        exe[6]:
            K: 3

score:
    exe: score.R
    return: res
    params:
        N: 100
        data: $scenario
        output: $method

runtime:
    R_libs: mvtnorm, ape, MASS, Matrix,
            lfa (https://github.com/StoreyLab/lfa)
    exe_path: bin
    output: outlier
    variables:
        data_functions: mvngenotypes, discrete.cosine, discrete.cosine2, discrete.cosine.peaksel
        method_functions: duforet.rho1, duforet.rho2, duforet.h, duforet.hprime, lfa, fst, gwish, gwish.tree,
                          bonhomme.tree, bonhomme, normal
